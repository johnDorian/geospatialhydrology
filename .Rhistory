??readShapeLine
streets <- readShapeLines("~/Desktop/west_streets.shp")
gstrs <- fortify(streets)
ggplot() + geom_path(aes(x,y,group=group), gstrs)
names(gstrs)
ggplot() + geom_path(aes(long,lat,group=group), gstrs)
library(ggthemes)
ggplot() + geom_path(aes(long,lat,group=group), gstrs) + theme_few()
head(gstrs)
gstrs <- merge(gstrs, streets@data, by="group")
gstrs$cat <- gstrs$id
gstrs <- merge(gstrs, streets@data, by="cat")
names(streets@data)
osm_id(streets@data)
head(streets@data$osm_id)
head(streets@data$name)
head(streets@data$highway)
rownames(streets@data)
streets <- readShapeLines("~/Desktop/west_streets.shp")
gstrs <- fortify(streets)
gstrs$cat <- as.numeric(rownames(streets@data))
head(streets@data$name)
head(streets@data$osm_id)
streets <- readShapeLines("~/Desktop/west_streets.shp")
gstrs <- fortify(streets, "osm_id")
head(gstrs)
tail(gstrs)
as.numeric(rownames(streets@data))
streets@data$cat <- as.numeric(rownames(streets@data))
gstrs <- merge(gstrs, streets@data, by="cat")
streets <- readShapeLines("~/Desktop/west_streets.shp")
gstrs <- fortify(streets, "osm_id")
streets@data$id <- as.numeric(rownames(streets@data))
gstrs <- merge(gstrs, streets@data, by="id")
head(gstrs)
ggplot() + geom_path(aes(long,lat,group=group), gstrs) + theme_few()
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="secondary") + theme_few()
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="secondary")) + theme_few()
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="residentak")) + theme_few()
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="residental")) + theme_few()
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="residential")) + theme_few()
levels(gstr$highway)
levels(gstrs$highway)
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="residential")) +
geom_path(aes(long,lat,group=group), subset(gstrs, highway=="motorway")) +
geom_path(aes(long,lat,group=group), subset(gstrs, highway=="motorway_link")) +
geom_path(aes(long,lat,group=group), subset(gstrs, highway=="secondary")) +
geom_path(aes(long,lat,group=group), subset(gstrs, highway=="secondary_link")) +
theme_few()
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="residential")) +
geom_path(aes(long,lat,group=group), subset(gstrs, highway=="motorway")) +
geom_path(aes(long,lat,group=group), subset(gstrs, highway=="motorway_link")) +
geom_path(aes(long,lat,group=group), subset(gstrs, highway=="secondary")) +
geom_path(aes(long,lat,group=group), subset(gstrs, highway=="secondary_link")) +
geom_path(aes(long,lat,group=group), subset(gstrs, highway=="tertiary")) +
theme_few()
names(gstrs)
ggplot() + geom_path(aes(long,lat,group=group, label = name), subset(gstrs, highway=="residential"))
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="residential")) +
geom_text(aes(long,lat,label=name), subset(gstrs, highway=="residential"))
head(subset(gstrs, highway=="residential"))
head(subset(gstrs, highway=="residential"), 100)
gstrs %>%
subset(highway=="residential") %>%
group_by(id) %>%
summarise(long = mean(long))
library(dlyr)
library(dplyr)
gstrs %>%
subset(highway=="residential") %>%
group_by(id) %>%
summarise(long = mean(long))
gstrs %>%
subset(highway=="residential") %>%
group_by(id) %>%
summarise(long = mean(long), lat = mean(lat), name = unique(name))
labels <- gstrs %>%
subset(highway=="residential") %>%
group_by(id) %>%
summarise(long = mean(long), lat = mean(lat), name = unique(name))
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="residential")) +
geom_text(aes(long,lat,label=name), labels)
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="residential")) +
geom_text(aes(long,lat,label=name), size = 0.1, labels)
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="residential")) +
geom_text(aes(long,lat,label=name), size = 0.3, labels)
ggplot() + geom_path(aes(long,lat,group=group), subset(gstrs, highway=="residential")) +
geom_text(aes(long,lat,label=name), size = 0.8, labels)
library(ggmap)
ggmap
get_map
?get_map
map <- get_map()
ggmap(map, fullpage = TRUE)
class(map)
summary(ggmap)
get_googlemap
help(package=ggmap)
img <- matrix(1:16, 4, 4)
image(img)
ggimage(t(img[,4:1]), fullpage = FALSE, scale_axes = TRUE)
data(hadley)
ggimage(hadley)
ggimage(hadley, coord_equal = FALSE)
class(hadley)
image(img)
x <- seq(1, 438, 15); n <- length(x)
df <- data.frame(x = x, y = -(120*(scale((x - 219)^3 - 25000*x) + rnorm(n)/2 - 3)))
qplot(x, y, data = df, geom = c('smooth','point'))
ggimage(hadley, fullpage = FALSE) +
geom_smooth(aes(x = x, y = y), fill = I('gray60'), data = df,
colour = I('green'), size = I(1)) +
geom_point(aes(x = x, y = y), data = df,
colour = I('green'), size = I(3), fill = NA)
ggmap(get_map(matrix(c(-10,20,40,80),2,2)))
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
pow <- function(x,y){
x^y
}
soil_moisture_box_r <- function(soil_moisture, input, pot_evap, snow_pack, fc, beta, lp){
previous_soil_moisture = soil_moisture
# Get amount of mms to be added
mms = floor(input)
# Get the leftovers
y = input - mms;
# Find the maxmimum amount of mm in all the models.
n <- max(mms)
output = matrix(0, nrow = 1, ncol=length(input))
for(j in 1:n){
dQdP = pmin(pow((soil_moisture/fc), beta), 1.0);
mms = pmax(mms - 1, 0);
soil_moisture = soil_moisture + (1.0 - dQdP)*(mms>0);
output = output + dQdP;
}
dQdP = pmin(pow((soil_moisture/fc), beta), 1.0);
soil_moisture = soil_moisture + (1 - dQdP) * y;
output = output + dQdP * y;
mean_sm = (soil_moisture + previous_soil_moisture)/2
act_evap = pot_evap * (mean_sm/(fc*lp)) * (mean_sm < (lp*fc)) + pot_evap * (mean_sm >= (lp * fc));
act_evap = act_evap*(snow_pack>0); # if there is snow present than evaporation = 0.
soil_moisture = soil_moisture - act_evap; # update the soil_moisture moisture.
return(list(soil_moisture=soil_moisture, output=output, act_evap=act_evap))
}
### Load the TUWmodel just for the data.
library(TUWmodel)
data(example_TUWmodel)
cfr = c(0.5, 0.1)
cwh = c(0.35, 0.35)
cfmax= c(1, 1)
sfcf = c(1, 1)
TT = c(0, 0)
fc = c(50, 50)
lp = c(1, 1)
beta = c(0.5, 20)
pe = matrix(rep(PET_Vils[1:2000,1], 2), ncol = 2)
P = P_Vils[1:2000,1]
T = matrix(rep(T_Vils[1:2000,1], 2), ncol =2)
SNOW = matrix(rep(rep(0, length(P)), 2), ncol =2)
Pmelt = matrix(rep(rep(0, length(P)), 2),ncol =2)
refreeze = matrix(rep(rep(0, length(P)), 2), ncol =2)
snowwater = matrix(rep(rep(0, length(P)), 2), ncol =2)
meltwater = matrix(rep(rep(0, length(P)), 2), ncol =2)
soil= matrix(rep(rep(0, length(P)), 2), ncol =2)
accum_Q = matrix(rep(rep(0, length(P)), 2), ncol =2)
ea = matrix(rep(rep(0, length(P)), 2), ncol =2)
suz= matrix(rep(rep(0, length(P)), 2), ncol =2)
q0= matrix(rep(rep(0, length(P)), 2), ncol =2)
q1= matrix(rep(rep(0, length(P)), 2), ncol =2)
perc_water= matrix(rep(rep(0, length(P)), 2), ncol =2)
slz = matrix(rep(rep(0, length(P)), 2), ncol =2)
q2 = matrix(rep(rep(0, length(P)), 2), ncol =2)
qsim =matrix(rep(rep(0, length(P)), 2), ncol =2)
k0 = c(0.02, 0.03)
uzl = c(20, 30)
k1 = c(0.2, 0.2)
perc= c(5, 10)
k2 = c(0.4, 0.3)
rain = matrix(rep(P*(T>TT), 2), ncol =2)
snowfall = matrix(rep(P*(T<=TT)*sfcf, 2), ncol =2)
for(i in 2:length(P)){
### SNOW ROUTINE ###
# Add snowfall to the snow pack.
SNOW[i,] =  snowfall[i,] + SNOW[i-1,];
# Check if there is any refreezing (has to be cold and snowwater must exist for this to occur)
refreeze[i,] = pmin(cfr * cfmax*pmax(TT- T[i,], 0.0), snowwater[i-1,])
# subtract the refreezing from the snow water.
snowwater[i,] = snowwater[i-1,] - refreeze[i,];
# Add new snow and refreeze amount.
SNOW[i,] = SNOW[i,] + refreeze[i,];
# Check if any snow should melt (if the temp is low than this gives no meltwater).
meltwater[i,]  = pmin(cfmax * pmax(T[i,] - TT, 0.0), SNOW[i,]);
# Remove the meltwater from the snow pack
SNOW[i,] = SNOW[i,]- meltwater[i,];
# Snow water now equals snow water, melt water and rainfall
snowwater[i,] = (snowwater[i,]+meltwater[i,]+rain[i,]);
# Limit the loss from the snow pack to the maximum allowable or 0
Pmelt[i,] = pmax(snowwater[i,]-SNOW[i,]*cwh, 0.0);
# Update the snow water.
snowwater[i,] = pmin(snowwater[i,], SNOW[i,]*cwh); # snowwater can't be more than the SNOW pack.
### END OF SNOW ROUTINE ###
### SOIL MOISTURE ROUTINE ###
soil[i,] = soil[i-1,];
# Get amount of mms to be added
mms = floor(Pmelt[i,])
# Get the leftovers
y = Pmelt[i,] - mms;
# Find the maxmimum amount of mm in all the models.
n <- max(mms)
for(j in 1:n){
dQdP = pmin(pow((soil[i,]/fc), beta), 1.0);
mms = pmax(mms - 1, 0);
soil[i,] = soil[i,] + (1.0 - dQdP)*(mms>0);
accum_Q[i,] = accum_Q[i,] + dQdP;
}
dQdP = pmin(pow((soil[i,]/fc), beta), 1.0);
soil[i,] = soil[i,] + (1 - dQdP) * y;
accum_Q[i,] = accum_Q[i,] + dQdP * y;
mean_sm = (soil[i,] + soil[i-1,])/2
ea[i,] = pe[i,] * (mean_sm/(fc*lp)) * (mean_sm < (lp*fc)) + pe[i,] * (mean_sm >= (lp * fc));
ea[i,] = ea[i,]*(SNOW[i,]>0); # if there is snow present than evaporation = 0.
soil[i,] = soil[i,] - ea[i,]; # update the soil moisture.
### END SOIL MOISTURE ROUTINE ###
### RUNOFF MODULE - TOP BOX ###
suz[i,] = pmax(suz[i-1,]+accum_Q[i,], 0.0);
q0[i,] = pmax((suz[i,]-uzl)*k0, 0.0);
q1[i,] = pmin(suz[i,]*k1, perc+k1*uzl) ;
perc_water[i,] = pmin(suz[i,]*perc, perc);
delta_suz = pmax(perc_water[i,] + q0[i,] + q1[i,], 0.00001);
q0[i,] = q0[i,] * (suz[i,]/delta_suz)*(delta_suz>suz[i,]) + q0[i,]*(delta_suz<=suz[i,]);
q1[i,] = q1[i,] * (suz[i,]/delta_suz)*(delta_suz>suz[i,]) + q1[i,]*(delta_suz<=suz[i,]);
perc_water[i,] = perc_water[i,] * (suz[i,]/delta_suz)*(delta_suz>suz[i,]) + perc_water[i,]*(delta_suz<=suz[i,]);
delta_suz = suz[i,]*(delta_suz>suz[i,]) + delta_suz*(delta_suz<=suz[i,]);
suz[i,] = suz[i,] - delta_suz;
### END OF RUNOFF MODULE - TOP BOX ###
### RUNOFF MODULE - BOTTOM BOX ###
slz[i,] = slz[i-1,] + perc_water[i,];
q2[i,] = pmin(slz[i,] * k2, perc);
slz[i,] = pmin(slz[i,] - q2[i,], perc/k2);
### END OF RUNOFF MODULE - BOTTOM BOX ###
qsim[i,] = q0[i,] + q1[i,] + q2[i,];
}
soil_moisture_box_r(soil[1129,], input=Pmelt[1129,], pe[1129,], SNOW[1129,], fc, beta, lp)
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), fc, beta, lp)
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), fc, beta, lp)
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), fc, beta, lp)
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), fc, beta, lp)
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), fc, beta, lp)
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), fc, beta, lp)
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), fc, beta, lp)
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), fc, beta, lp)
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1)
)
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,]), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
soil_moisture_box_r(soil[1129,], input=Pmelt[1129,], pe[1129,], SNOW[1129,], fc, beta, lp)
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
matrix(Pmelt[1129,], nrow=1)
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
soil_moisture_box_r(soil[1129,], input=Pmelt[1129,], pe[1129,], SNOW[1129,], fc, beta, lp)
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
soil_moisture_box_r(soil[1129,], input=Pmelt[1129,], pe[1129,], SNOW[1129,], fc, beta, lp)
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box_r(soil[1129,], input=Pmelt[1129,], pe[1129,], SNOW[1129,], fc, beta, lp)
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_box_r(soil[1129,], input=Pmelt[1129,], pe[1129,], SNOW[1129,], fc, beta, lp)
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
system.time()
system.time(soil_moisture_box_r(soil[1129,], input=Pmelt[1129,], pe[1129,], SNOW[1129,], fc, beta, lp))
system.time(soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1)))
soil_moisture_box_r(soil[1129,], input=Pmelt[1129,], pe[1129,], SNOW[1129,], fc, beta, lp)
soil_moisture_box(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
soil_moisture_box_r(soil[1129,], input=Pmelt[1129,], pe[1129,], SNOW[1129,], fc, beta, lp)
soil_moisture_rountine(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
soil_moisture_rountine(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(pe[1129,], nrow=1), matrix(SNOW[1129,], nrow=1), matrix(fc, nrow=1), matrix(beta, nrow=1), matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
tmp_soil = soil[1129,]
Rcpp::sourceCpp('Desktop/testing.cpp')
tmp_soil = soil[1129,]
soil_res = soil_moisture_rountine(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), matrix(beta, nrow=1))
soil_res = soil_moisture_rountine(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), beta=matrix(beta, nrow=1))
soil_res = soil_moisture_rountine(matrix(soil[1129,], nrow=1), input=matrix(Pmelt[1129,], nrow=1), beta=matrix(beta, nrow=1), fc=matrix(fc, nrow=1))
soil_res
soil_moisture_rountine(matrix(tmp_soil, nrow=1), soil_res$soil_moisture, pot_evap = matrix(pe[1129,], nrow=1), snow_pack=matrix(SNOW[1129,], nrow=1), fc=matrix(fc, nrow=1), lp = matrix(lp, nrow=1))
evaporation_rountine(matrix(tmp_soil, nrow=1), soil_res$soil_moisture, pot_evap = matrix(pe[1129,], nrow=1), snow_pack=matrix(SNOW[1129,], nrow=1), fc=matrix(fc, nrow=1), lp = matrix(lp, nrow=1))
evaporation_routine(matrix(tmp_soil, nrow=1), soil_res$soil_moisture, pot_evap = matrix(pe[1129,], nrow=1), snow_pack=matrix(SNOW[1129,], nrow=1), fc=matrix(fc, nrow=1), lp = matrix(lp, nrow=1))
Rcpp::sourceCpp('Desktop/testing.cpp')
evaporation_routine(matrix(tmp_soil, nrow=1), soil_res$soil_moisture, pot_evap = matrix(pe[1129,], nrow=1), snow_pack=matrix(SNOW[1129,], nrow=1), fc=matrix(fc, nrow=1), lp = matrix(lp, nrow=1))
soil_moisture_box_r(soil[1129,], input=Pmelt[1129,], pe[1129,], SNOW[1129,], fc, beta, lp)
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
snow_pack_routine(matrix(SNOW[1129,], nrow=1),
matrix(snowwater[1129,], nrow=1),
matrix(snowfall[1129,], nrow=1),
matrix(rainfall[1129,], nrow=1),
temp = matrix(T[1129,], nrow=1),
temp_threshold = matrix(TT, nrow=1),
cfr = matrix(cfr, nrow=1),
cfmax = matrix(cfmax, nrow=1),
cwh = matrix(cwh, nrow=1))
rainfall
snow_pack_routine(matrix(SNOW[1129,], nrow=1),
matrix(snowwater[1129,], nrow=1),
matrix(snowfall[1129,], nrow=1),
matrix(rain[1129,], nrow=1),
temp = matrix(T[1129,], nrow=1),
temp_threshold = matrix(TT, nrow=1),
cfr = matrix(cfr, nrow=1),
cfmax = matrix(cfmax, nrow=1),
cwh = matrix(cwh, nrow=1))
SNOW[1129,]
Pmelt[1129,]
snowwater[1129,]
rain[1129,]
snow[1129,]
snowfall[1129,]
snow_pack_routine(matrix(SNOW[1128,], nrow=1),
matrix(snowwater[1128,], nrow=1),
matrix(snowfall[1129,], nrow=1),
matrix(rain[1129,], nrow=1),
temp = matrix(T[1129,], nrow=1),
temp_threshold = matrix(TT, nrow=1),
cfr = matrix(cfr, nrow=1),
cfmax = matrix(cfmax, nrow=1),
cwh = matrix(cwh, nrow=1))
SNOW[1128,]
SNOW[1129,]
snowwater[1129,]
Pmelt[1129,]
1000*1000
fm1 <- gls(follicles ~ sin(2*pi*Time) + cos(2*pi*Time), Ovary)
library(nlme)
fm1 <- gls(follicles ~ sin(2*pi*Time) + cos(2*pi*Time), Ovary)
ACF(fm1, form = ~ 1 | Mare)
plot(ACF(fm1, form = ~ 1 | Mare))
acf(lh)
acf(lh, type = "covariance")
pacf(lh)
acf(ldeaths)
acf(ldeaths, ci.type = "ma")
acf(ts.union(mdeaths, fdeaths))
ccf(mdeaths, fdeaths, ylab = "cross-correlation")
mdeaths
fdeaths
?ccf
?gls
20*60
library(sp)
?readPolyPoints()
??readPolyPoints()
??readShapePoints()
library(maptools)
redox_starting_point <- readShapePoints("~/Downloads/redox_start")
redox_starting_point@coords
redox_starting_point@coords[,1:2]
coords <- redox_starting_point@coords[,1:2]
coords$x + 1:32
names(coords) <- c("x", "y")
coords$x + 1:32
coords <- data.frame(redox_starting_point@coords[,1:2])
names(coords) <- c("x", "y")
coords$x + 1:32
coords <- data.frame(redox_starting_point@coords[,1:2])
names(coords) <- c("x", "y")
coords
coords <- data.frame(redox_starting_point@coords[,1:2])
coords
coords <- as.data.frame(redox_starting_point@coords[,1:2])
coords
data.frame(redox_starting_point@coords[,1:2])
redox_starting_point@coords[,1:2]
class(redox_starting_point@coords[,1:2])
coords <- data.frame(x= redox_starting_point@coords[,1],
y = redox_starting_point@coords[,2] )
coords
coords$x + 1:32
coords <- data.frame(x= redox_starting_point@coords[,1]+ 1:32,
y = redox_starting_point@coords[,2] )
coords
plot(coords)
coords <- data.frame(x= redox_starting_point@coords[,1]+ 0:40,
y = redox_starting_point@coords[,2] )
coords
write.csv(coords, row.names = FALSE, file = '~/Downloads/redox_transect_points.csv')
read.csv('~/Downloads/redox_elevation.csv')
read.csv('~/Downloads/redox_elev.csv')
read.csv('~/Downloads/redox_elev.csv')
read.csv('~/Downloads/redox_elev.csv')
plot(read.csv('~/Downloads/redox_elev.csv')[,4])
transect <- read.csv('~/Downloads/redox_elev.csv')
head(transect)
transect <- read.csv('~/Downloads/redox_elev.csv', header = FALSE)
names(transect) <_ c("x", "y", "cat", "elev")
names(transect) <- c("x", "y", "cat", "elev")
transect
transect <- transect[,c(1,2,4)]
transect
transect$x - transect$x[1]
transect$dist_from_start <- transect$x - transect$x[1]
write.csv(transect, '~/Downloads/redox_transect_profile.csv', row.names = FALSE)
0.534324*100000
0.500225*100000
0.534324*1000000
0.500225*1000000
0.534324*1000000
s5 <- 0.500225*1000000
s6 <- 0.534324*1000000
s5
s6
library(slidify)
setwd(~/work/Projects/)
setwd("~/work/Projects/geospatialhydrology")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
publish("geospatialhydrology", "johnDorian")
